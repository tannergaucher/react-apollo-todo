{"version":3,"file":"static/webpack/static/development/pages/index.js.a6e09605f3bf08af270e.hot-update.js","sources":["webpack:///./components/DeleteTodo.js"],"sourcesContent":["import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nimport { ALL_TODOS_QUERY } from './Todos'\n\nimport { Button } from 'rebass'\n\nconst DELETE_TODO_MUTATION = gql`\n  mutation DELETE_TODO_MUTATION($id: ID!) {\n    deleteTodo(id: $id) {\n      id\n    }\n  }\n`\n\nclass DeleteTodo extends React.Component {\n  update = (cache, payload) => {\n    // console.log('manually update cache on the client so matches server')\n    const data = cache.readQuery({ query: ALL_TODOS_QUERY })\n    // console.log('data', data, 'payload', payload)\n    // console.log(payload.data.deleteTodo.id)\n    data.todoes = data.todoes.filter(\n      todo => todo.id !== payload.data.deleteTodo.id\n    )\n    cache.writeQuery({ query: ALL_TODOS_QUERY, data })\n  }\n\n  render() {\n    return (\n      <Mutation\n        mutation={DELETE_TODO_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n      >\n        {(deleteTodo, { error }) => (\n          <button\n            onClick={() => {\n              if (confirm(`Are you sure you want to delete this Todo`)) {\n                deleteTodo().catch(err => {\n                  alert(err.message)\n                })\n                this.update\n              }\n            }}\n          >\n            X\n          </button>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default DeleteTodo\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAgBA;;;;AAnCA;AACA;AAqCA;;;;A","sourceRoot":""}